{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "covid19-df-udemy-course"
		},
		"Covid19 Azure Blob Storage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Covid19 Azure Blob Storage'"
		},
		"Covid19 Azure Data Lake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'Covid19 Azure Data Lake'"
		},
		"Covid19SqlsrvUdemyCourse_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Covid19SqlsrvUdemyCourse'"
		},
		"Covid19 Azure Data Lake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://covid19dludemycourse.dfs.core.windows.net/"
		},
		"ECDC MONK SITE HTTP_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat(linkedService().SCHEME, ':\\\\', linkedService().HOST)}"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/spl_process_testing_and_population_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set_databricks_instance",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "databricks_instance",
							"value": {
								"value": "@concat('adb-', pipeline().parameters.DATABRICKS_WORKSPACE_NAME, '.azuredatabricks.net')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Run_Job",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set_databricks_instance",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": {
								"value": "@concat('https://', variables('databricks_instance'), '/api/2.1/jobs/run-now')",
								"type": "Expression"
							},
							"body": {
								"value": "@concat('{\"job_id\": ', string(pipeline().parameters.DATABRICKS_WORKFLOW_JOB_ID),'}')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": {
									"value": "@pipeline().parameters.DATABRICKS_RESOURCE",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Set_workflow_job_run_id",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Run_Job",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "job_run_id",
							"value": {
								"value": "@activity('Run_Job').output.run_id",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Wait_until_workflow_ended",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set_workflow_job_run_id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(pipeline().parameters.DATABRICKS_TERMINATED_STATES, variables('job_state'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Check_job_state",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {},
										"url": {
											"value": "@concat('https://', variables('databricks_instance'), '/api/2.1/jobs/runs/get?run_id=', variables('job_run_id'))",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": {
												"value": "@pipeline().parameters.DATABRICKS_RESOURCE",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Update_job_state_to_life_cycle_state",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Check_job_state",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "job_state",
										"value": {
											"value": "@activity('Check_job_state').output.state.life_cycle_state",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Wait_to_recheck_job_state",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "Update_job_state_to_life_cycle_state",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": {
											"value": "@variables('job_check_interval')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "Cancel_Job",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Wait_until_workflow_ended",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": {
								"value": "@concat('https://', variables('databricks_instance'), '/api/2.1/jobs/runs/cancel')",
								"type": "Expression"
							},
							"body": {
								"value": "@concat('{\"run_id\": ',  variables('job_run_id'),'}')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": {
									"value": "@pipeline().parameters.DATABRICKS_RESOURCE",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Job Timeout",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Cancel_Job",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": {
								"value": "@concat('Job Timeout', 'Cancel Job:', activity('Cancel_Job').output.message, '(', activity('Cancel_Job').output.error_code,')')",
								"type": "Expression"
							},
							"errorCode": "500"
						}
					},
					{
						"name": "Update job state to result_state",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Wait_until_workflow_ended",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "job_state",
							"value": {
								"value": "@activity('Check_job_state').output.state.result_state",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If_job_success",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Update job state to result_state",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('job_state'), 'SUCCESS')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Job Failed",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@concat('Job Failed: ', variables('job_state'))",
											"type": "Expression"
										},
										"errorCode": "500"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DATABRICKS_HOST": {
						"type": "string",
						"defaultValue": "https://accounts.azuredatabricks.net"
					},
					"DATABRICKS_CLIENT_ID": {
						"type": "string",
						"defaultValue": "380282b7-3b0a-41e1-a143-60c159468243"
					},
					"DATABRICKS_WORKSPACE_NAME": {
						"type": "string",
						"defaultValue": "1166845494932407.7"
					},
					"DATABRICKS_ACCOUNT_ID": {
						"type": "string",
						"defaultValue": "67aeafa9-9677-4a69-afc5-7d366447e3d3"
					},
					"DATABRICKS_WORKFLOW_JOB_ID": {
						"type": "int",
						"defaultValue": 1061633047143074
					},
					"DATABRICKS_RESOURCE": {
						"type": "string",
						"defaultValue": "2ff814a6-3304-4ab8-85cb-cd0e6f879c1d"
					},
					"DATABRICKS_TERMINATED_STATES": {
						"type": "array",
						"defaultValue": [
							"TERMINATED",
							"SKIPPED",
							"INTERNAL_ERROR",
							"BLOCKED"
						]
					}
				},
				"variables": {
					"databricks_instance": {
						"type": "String"
					},
					"job_state": {
						"type": "String",
						"defaultValue": "PENDING"
					},
					"job_check_interval": {
						"type": "Integer",
						"defaultValue": 10
					},
					"job_run_id": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "pl_transform_data"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Covid19 Azure Blob Storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Covid19 Azure Blob Storage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Covid19 Azure Data Lake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Covid19 Azure Data Lake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('Covid19 Azure Data Lake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Covid19SqlsrvUdemyCourse')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Covid19SqlsrvUdemyCourse_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ECDC MONK SITE HTTP')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"HOST": {
						"type": "string",
						"defaultValue": "raw.githubusercontent.com"
					},
					"SCHEME": {
						"type": "string",
						"defaultValue": "https"
					}
				},
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ECDC MONK SITE HTTP_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/conf_ecdc_file_name_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Covid19 Azure Blob Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ecdc_file_name.json",
						"container": "conifgs"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"src_file": {
							"type": "string"
						},
						"dst_file": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Covid19 Azure Blob Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bronze_cases_and_death_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Covid19 Azure Data Lake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "cases_deaths.csv",
						"folderPath": "ecdc",
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code",
						"type": "String"
					},
					{
						"name": "continent",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					},
					{
						"name": "indicator",
						"type": "String"
					},
					{
						"name": "daily_count",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "rate_14_day",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Covid19 Azure Data Lake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bronze_country_code_loopup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Covid19 Azure Data Lake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "country_lookup.csv",
						"folderPath": "dim",
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code_2_digit",
						"type": "String"
					},
					{
						"name": "country_code_3_digit",
						"type": "String"
					},
					{
						"name": "continent",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Covid19 Azure Data Lake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bronze_dim_date_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Covid19 Azure Data Lake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dim_date.csv",
						"folderPath": "dim",
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date_key",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "day",
						"type": "String"
					},
					{
						"name": "day_name",
						"type": "String"
					},
					{
						"name": "day_of_year",
						"type": "String"
					},
					{
						"name": "week_of_month",
						"type": "String"
					},
					{
						"name": "week_of_year",
						"type": "String"
					},
					{
						"name": "month_name",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "year_week",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Covid19 Azure Data Lake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bronze_hospital_admissions_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Covid19 Azure Data Lake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "hospital_admissions.csv",
						"folderPath": "ecdc",
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "indicator",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "year_week",
						"type": "String"
					},
					{
						"name": "value",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Covid19 Azure Data Lake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_bronze_population_by_age_tsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "The file contains population data grouped by country and age.",
				"linkedServiceName": {
					"referenceName": "Covid19 Azure Data Lake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "population_by_age.tsv",
						"folderPath": "population",
						"fileSystem": "bronze"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Covid19 Azure Data Lake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_ecdc_csv_dl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Covid19 Azure Data Lake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FILE_NAME": {
						"type": "string",
						"defaultValue": "cases_deaths.csv"
					},
					"PATH": {
						"type": "string",
						"defaultValue": "ecdc"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FILE_NAME",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().PATH",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Covid19 Azure Data Lake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_ecdc_csv_http')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ECDC MONK SITE HTTP",
					"type": "LinkedServiceReference",
					"parameters": {
						"HOST": "raw.githubusercontent.com",
						"SCHEME": "https"
					}
				},
				"parameters": {
					"FILE_NAME": {
						"type": "string",
						"defaultValue": "cases_deaths.csv"
					},
					"PATH": {
						"type": "string",
						"defaultValue": "cloudboxacademy/covid19/main/ecdc_data"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat(dataset().PATH, '/', dataset().FILE_NAME)",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ECDC MONK SITE HTTP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_raw_population_by_age_gz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "The file contains population data grouped by country and age.",
				"linkedServiceName": {
					"referenceName": "Covid19 Azure Blob Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "population_by_age.tsv.gz",
						"container": "population"
					},
					"columnDelimiter": "\t",
					"compressionCodec": "gzip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Covid19 Azure Blob Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_silver_cases_and_deaths_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Covid19 Azure Data Lake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ecdc/cases_deaths",
						"fileSystem": "silver"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Covid19 Azure Data Lake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_silver_daily_hospital_admissions_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Covid19 Azure Data Lake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ecdc/hospital_admissions/daily",
						"fileSystem": "silver"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Covid19 Azure Data Lake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_silver_population_2019_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Covid19 Azure Data Lake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "population",
						"fileSystem": "silver"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "country_code",
						"type": "UTF8"
					},
					{
						"name": "age_group",
						"type": "UTF8"
					},
					{
						"name": "min_age",
						"type": "UTF8"
					},
					{
						"name": "max_age",
						"type": "UTF8"
					},
					{
						"name": "percentage_2019",
						"type": "DECIMAL",
						"precision": 4,
						"scale": 2
					},
					{
						"name": "country",
						"type": "UTF8"
					},
					{
						"name": "population",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Covid19 Azure Data Lake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_silver_weekly_hospital_admissions_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Covid19 Azure Data Lake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ecdc/hospital_admissions/weekly",
						"fileSystem": "silver"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Covid19 Azure Data Lake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sliver_testing_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Covid19 Azure Data Lake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ecdc/testing",
						"fileSystem": "silver"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "country",
						"type": "UTF8"
					},
					{
						"name": "country_code_2_digit",
						"type": "UTF8"
					},
					{
						"name": "country_code_3_digit",
						"type": "UTF8"
					},
					{
						"name": "year_week",
						"type": "UTF8"
					},
					{
						"name": "week_start_date",
						"type": "DATE"
					},
					{
						"name": "week_end_date",
						"type": "DATE"
					},
					{
						"name": "new_cases",
						"type": "INT32"
					},
					{
						"name": "tests_done",
						"type": "INT32"
					},
					{
						"name": "population",
						"type": "INT32"
					},
					{
						"name": "testing_rate",
						"type": "DOUBLE"
					},
					{
						"name": "positivity_rate",
						"type": "DOUBLE"
					},
					{
						"name": "testing_data_source",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Covid19 Azure Data Lake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_tb_cases_and_deaths')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Covid19SqlsrvUdemyCourse",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "country",
						"type": "varchar"
					},
					{
						"name": "country_code_2_digit",
						"type": "varchar"
					},
					{
						"name": "country_code_3_digit",
						"type": "varchar"
					},
					{
						"name": "population",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "cases_count",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "deaths_count",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "reported_date",
						"type": "date"
					},
					{
						"name": "source",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "covid_reporting",
					"table": "cases_and_deaths"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Covid19SqlsrvUdemyCourse')]"
			]
		}
	]
}